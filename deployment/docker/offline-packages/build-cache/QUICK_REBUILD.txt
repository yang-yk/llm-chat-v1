# 快速重新构建指南

## 最简单的方式

```bash
cd /path/to/llm-chat-v1/deployment/docker/offline-packages/build-cache
bash rebuild.sh
```

按照提示操作即可。

## 手动构建命令

### 重新构建后端
```bash
cd /path/to/llm-chat-v1
docker build -t docker-backend:latest backend/
```

### 重新构建前端
```bash
cd /path/to/llm-chat-v1
docker build \
  --build-arg NEXT_PUBLIC_API_URL=http://your-server-ip \
  -t docker-frontend:latest \
  frontend/
```

### 使用docker-compose重新构建
```bash
cd /path/to/llm-chat-v1/deployment/docker
docker compose build
docker compose up -d --build
```

## 常用命令

### 查看镜像
```bash
docker images | grep -E "docker-backend|docker-frontend"
```

### 查看构建历史
```bash
docker history docker-backend:latest
```

### 清理旧镜像
```bash
docker image prune -f
```

### 查看服务状态
```bash
cd deployment/docker
docker compose ps
docker compose logs -f
```

## 注意事项

1. ✅ 只修改代码文件 - 快速构建（10-30秒）
2. ⚠️ 修改依赖文件（requirements.txt, package.json）- 需要联网或手动处理依赖
3. ✅ 利用已有镜像层缓存 - Docker会自动优化
4. ⚠️ 首次构建较慢 - 后续会很快

## 构建失败排查

### 查看详细日志
```bash
docker build --progress=plain -t docker-backend:latest backend/
```

### 清理缓存重新构建
```bash
docker builder prune -f
docker build --no-cache -t docker-backend:latest backend/
```

### 检查磁盘空间
```bash
df -h
docker system df
```

## 更多帮助

详细文档: README.md
Docker部署指南: ../../OFFLINE_DEPLOYMENT_GUIDE.md
